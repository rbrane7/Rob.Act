/*@ Rob.Act.Analyze.Settings @*/ type
{
	Doctee = 'doctee://localhost:43202/Action/Analyze?Name=Rana' ,
	WorkoutsPaths = /*@'C:\Users\teplyr\Downloads\*ZLan*.gpx,C:\Users\teplyr\Downloads\*Studanka-Knajpa*.gpx'*/ @'C:\Users\teplyr\Downloads\concept2*.tcx,C:\Users\teplyr\Downloads\*.gpx,C:\Users\teplyr\Downloads\*.par,C:\Users\teplyr\Downloads\*.path' , /*WorkoutsFilter = p=>p.Action=='AeT' ,*/
	WorkoutsPath = @'C:\Users\teplyr\Downloads\*.path' ,
	AspectsPaths = @'C:\Users\teplyr\Downloads\*.asp' , AspectsFilter = a=>a.Spec!='Test' ,
	AspectsPath = @'C:\Users\teplyr\Downloads\*.asp' ,
	StatePath = @'Run\' ,
	ActionTraits = []{ 'Action' , 'Date:yyyy-MM-dd HH:mm:ss' , 'Time:hh\\:mm\\:ss' , 'Draglet/Drag:0.00' , 'Power/Ent:0W' , 'Beatrate/Beat:0`b' , 'Beatage/bEnt:0bW' , 'Drift:.000' , 'xDrift:.000' , 'Tags' } ,
	MatrixTraits = []{ 'Date:yyyy-MM-dd HH:mm:ss' , 'Time:hh\\:mm\\:ss\\.ff' , 'Distance/Dist:0.0 m' , 'Alt/Alt:0.0 m' , 'Asc/Asc:0.0 m' , 'Dev/Dev:0.0 m' , 'Energy:0 J' , 'Effort:0 J' , 'Beat:0' , 'Bit' , 'Draglet/aDrag:0.00' , 'Gradelet/aGrade:.000' , 'Bendlet/aBend:.000' , 'Speed/aSpeed:0.00 m/s' , 'Power/aPower:0 W' , 'Force/aForce:0 N' , 'Beatage/aWork/Beat:0 J/b' , 'Bitage/aWork/Bit:0 J/B' , 'Beatrate/aBeat:0/min' , 'Bitrate/aBit:0/min' , 'Marklet/Mark' } ,
	SpectrumBinds = []{ string.Empty , string.Empty , ':0.0m' , ':0.0m' , ':0.00m' , string.Empty , ':0' , string.Empty , ':0J' , ':0.00m' , '(time.FromSeconds(.)):h\:mm\:ss\.f' , '(.(date.MinValue.AddSeconds(.))):yyMMdd\.hh\:mm\:ss\.f' } ,
	ActionAssocier = (p,a)=>p.Action==a.Spec ,
	SubjectMass = 76 ,
	Altiplane = (0.0,10D,2B) ,
}
;
System.Diagnostics.{ Trace.Listeners.Add(Aid.Diagnostics.StoreListener(@"Destiny=Run\Local.log"){TraceOutputOptions=type.DateTime}) ; Trace.AutoFlush = true ; Trace.TraceInformation('Started') } ;
Aid.Extension.LambdaContext.MultipletGenAssembly = 'System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' ;
Rob.Act.Path.Corrects = true ;
Rob.Act.Altiplane.VicinityRad = 0 ;
(Rob.Act.AxeOperations) ;