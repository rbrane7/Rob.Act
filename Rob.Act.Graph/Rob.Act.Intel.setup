/*@ Rob.Act.Analyze.Settings @*/ type
{
	Doctee = 'doctee://localhost:43203/Action/Analyze?Name=Rana' ,
	/*WorkoutsPaths = @'C:\Users\teplyr\Downloads\concept2*.tcx | C:\Users\teplyr\Downloads\*.gpx | C:\Users\teplyr\Downloads\*.Bio.csv | C:\Users\teplyr\Downloads\*.par | C:\Users\teplyr\Downloads\*.path' ,*/
	WorkoutsPaths = @'C:\Users\teplyr\Downloads\concept2-logbook-workout-69333840.*' ,
	WorkoutsPath = @'C:\Users\teplyr\Downloads\*.path' , /*WorkoutsSeed = =>Name||'©℗®' ,*//* WorkoutsFilter = =>Refine||'©℗®' ,*/
	AspectsPaths = @'C:\Users\robin\OneDrive\Action\Lab\Context\*.asp' , AspectsPath = @'C:\Users\robin\OneDrive\Action\Lab\Context\*.asp' , /*AspectsFilter = =>Spec!='Test' ,*/
	StatePath = @'C:\Users\robin\OneDrive\Action\Lab\Context' ,
	ActionTraits = []{'Action','Refine','Locus','Date:yyyy-MM-dd.HH:mm ddd','Time/∫♀:g','Dist/∫♂:0m','Power/☼:0W','Beatrate/♥:.*60D=>0/min','MaxBeat/♥↓:.*60D=>0/min','Beatage/❦☼:0.0❦W',/*'(((Power+Beatage)*3+1000*60/Beatrate+1000/MaxBeat)/3)/∑:0',*/'Drift/⇋,5:.000','xDrift/⇋↓,5:.000','Draglet/↣:0.00','Tags','Origin:.(string)%`\\/`.=>'} ,
	MatrixTraits = []{'Date:yyyy-MM-dd HH:mm:ss','Time/∫♀:hh\\:mm\\:ss\\.ff','Distance/∫♂:0.0m','Alt/∫¤:0.0m','Asc/Asc:0.0m','Dev/Dev:0.0m','Energy/∫☼:0J','Flow:0J','Beat/∫♥:0','Bit/∫○:0','Draglet/ØDrag:0.00','Gradelet/ØGrade:.000','Bendlet/ØBend:.000','Speed/Ø♂:0.00m/s','Power/Ø☼:0W','Force/Ø►:0N','Beatage/Ø☼∕♥:0J∕♥','Bitage/Ø☼∕○:0J∕○','Beatrate/Ø♥:0/min','Bitrate/Ø○:0/min','Marklet/Mark','Tags'} ,
	SpectrumBinds = []{':0.00000',':0.00000',':0.0m==>./`m',':0.0m==>./`m',':0.00m',string.Empty,':0♥',':0○',':0J',':0.00m',string.Empty,':0.000',':0.000',':0.000',':0.000',':0',':0.000',':0.000',':0.000',':date.MinValue.AddSeconds(.)=>yy-MM-dd\.HH\:mm\:ss\.f',':.*`s=>h\:mm\:ss\.f'} ,
	ActionAssocier = (p,a)=>p.Action==a.Spec ,
	Altiplane = (0.0D,10D,4B) ,
	ViewScreenMargin = 10 ,
	External = []{ (=>'http'<Scheme,@"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe") , (=>'file'<Scheme,@"C:\Windows\explorer.exe") } ,
	Internal = []{ (type.F2,=>IncludeSpecToOrigin()) , (type.F3,=>IncludeSpecToOrigin(true)) } ,
}
;
System.Diagnostics.{ Trace.Listeners.Add(Aid.Diagnostics.StoreListener(@"Destiny=Run\Local.log"){TraceOutputOptions=type.DateTime}) ; Trace.AutoFlush = true ; Trace.TraceInformation('Started') } ;
Aid.Extension.LambdaContext.MultipletGenAssembly = 'System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' ;
Rob.Act.Path.{ Persistent = Primary = Corrects = /*Altismooths =*/ true ; Medium = Mediator{Rob.Act.Path.Marklane()} } ; Rob.Act.Path.Marklane.Persisting = false ;
Rob.Act.Gpx.Extension.Primary = true ;
Rob.Act.Altiplane.{ VicinityRad = 1 ; HitWeight = 100 } ;
(Rob.Act.AxeOperations) ; (Rob.Act.Translation) ; Rob.Act.Translation.Kind = type.Act ;
(Rob.Act.Erg) ; Rob.Act.Erg.Csv.Powerage = =>true ;
Rob.Act.Analyze.Main.Aggregator.Basis.CentreTimely.0 = @'Speed|♂|☼|♥|◄'@ ;
